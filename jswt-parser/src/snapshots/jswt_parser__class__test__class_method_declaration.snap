---
source: jswt-parser/src/class.rs
expression: actual

---
Ast {
    program: Program {
        files: [
            File {
                source_elements: SourceElements {
                    source_elements: [
                        ClassDeclaration(
                            ClassDeclarationElement {
                                span: Span {
                                    file: "test_class_method_declaration",
                                    module: "module/test_class_method_declaration",
                                    start: 0,
                                    end: 29,
                                    [content]: "class A { hello(a: i32) { } }",
                                },
                                ident: Identifier {
                                    span: Span {
                                        file: "test_class_method_declaration",
                                        module: "module/test_class_method_declaration",
                                        start: 6,
                                        end: 7,
                                        [content]: "A",
                                    },
                                    value: "A",
                                },
                                body: ClassBody {
                                    span: Span {
                                        file: "test_class_method_declaration",
                                        module: "module/test_class_method_declaration",
                                        start: 8,
                                        end: 29,
                                        [content]: "{ hello(a: i32) { } }",
                                    },
                                    class_elements: [
                                        Method(
                                            ClassMethodElement {
                                                span: Span {
                                                    file: "test_class_method_declaration",
                                                    module: "module/test_class_method_declaration",
                                                    start: 10,
                                                    end: 27,
                                                    [content]: "hello(a: i32) { }",
                                                },
                                                annotations: [],
                                                ident: Identifier {
                                                    span: Span {
                                                        file: "test_class_method_declaration",
                                                        module: "module/test_class_method_declaration",
                                                        start: 10,
                                                        end: 15,
                                                        [content]: "hello",
                                                    },
                                                    value: "hello",
                                                },
                                                params: FormalParameterList {
                                                    parameters: [
                                                        FormalParameterArg {
                                                            ident: Identifier {
                                                                span: Span {
                                                                    file: "test_class_method_declaration",
                                                                    module: "module/test_class_method_declaration",
                                                                    start: 16,
                                                                    end: 17,
                                                                    [content]: "a",
                                                                },
                                                                value: "a",
                                                            },
                                                            type_annotation: TypeAnnotation {
                                                                span: Span {
                                                                    file: "test_class_method_declaration",
                                                                    module: "module/test_class_method_declaration",
                                                                    start: 19,
                                                                    end: 22,
                                                                    [content]: "i32",
                                                                },
                                                                ty: Primitive(
                                                                    I32,
                                                                ),
                                                            },
                                                        },
                                                    ],
                                                },
                                                returns: None,
                                                body: BlockStatement {
                                                    span: Span {
                                                        file: "test_class_method_declaration",
                                                        module: "module/test_class_method_declaration",
                                                        start: 24,
                                                        end: 27,
                                                        [content]: "{ }",
                                                    },
                                                    statements: StatementList {
                                                        statements: [],
                                                    },
                                                },
                                            },
                                        ),
                                    ],
                                },
                            },
                        ),
                    ],
                },
            },
        ],
    },
}
