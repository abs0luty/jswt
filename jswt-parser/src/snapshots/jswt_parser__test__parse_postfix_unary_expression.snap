---
source: jswt-parser/src/lib.rs
expression: actual

---
Ast {
    program: Program {
        files: [
            File {
                span: Span {
                    file: "parse_postfix_unary_expression",
                    module: "module/parse_postfix_unary_expression",
                    start: 0,
                    end: 31,
                    [content]: "let x: i32 = 99--; let y = i++;",
                },
                source_elements: SourceElements {
                    span: Span {
                        file: "parse_postfix_unary_expression",
                        module: "module/parse_postfix_unary_expression",
                        start: 0,
                        end: 31,
                        [content]: "let x: i32 = 99--; let y = i++;",
                    },
                    source_elements: [
                        Statement(
                            Variable(
                                VariableStatement {
                                    span: Span {
                                        file: "parse_postfix_unary_expression",
                                        module: "module/parse_postfix_unary_expression",
                                        start: 0,
                                        end: 18,
                                        [content]: "let x: i32 = 99--;",
                                    },
                                    modifier: Let(
                                        Span {
                                            file: "parse_postfix_unary_expression",
                                            module: "module/parse_postfix_unary_expression",
                                            start: 0,
                                            end: 3,
                                            [content]: "let",
                                        },
                                    ),
                                    target: Identifier(
                                        Identifier {
                                            span: Span {
                                                file: "parse_postfix_unary_expression",
                                                module: "module/parse_postfix_unary_expression",
                                                start: 4,
                                                end: 5,
                                                [content]: "x",
                                            },
                                            value: "x",
                                        },
                                    ),
                                    expression: Unary(
                                        UnaryExpression {
                                            span: Span {
                                                file: "parse_postfix_unary_expression",
                                                module: "module/parse_postfix_unary_expression",
                                                start: 15,
                                                end: 15,
                                                [content]: "",
                                            },
                                            op: PostDecrement(
                                                Span {
                                                    file: "parse_postfix_unary_expression",
                                                    module: "module/parse_postfix_unary_expression",
                                                    start: 15,
                                                    end: 17,
                                                    [content]: "--",
                                                },
                                            ),
                                            expr: Literal(
                                                Integer(
                                                    IntegerLiteral {
                                                        span: Span {
                                                            file: "parse_postfix_unary_expression",
                                                            module: "module/parse_postfix_unary_expression",
                                                            start: 13,
                                                            end: 15,
                                                            [content]: "99",
                                                        },
                                                        value: 99,
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                    type_annotation: Some(
                                        TypeAnnotation {
                                            span: Span {
                                                file: "parse_postfix_unary_expression",
                                                module: "module/parse_postfix_unary_expression",
                                                start: 7,
                                                end: 10,
                                                [content]: "i32",
                                            },
                                            ty: Primitive(
                                                I32,
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        Statement(
                            Variable(
                                VariableStatement {
                                    span: Span {
                                        file: "parse_postfix_unary_expression",
                                        module: "module/parse_postfix_unary_expression",
                                        start: 19,
                                        end: 31,
                                        [content]: "let y = i++;",
                                    },
                                    modifier: Let(
                                        Span {
                                            file: "parse_postfix_unary_expression",
                                            module: "module/parse_postfix_unary_expression",
                                            start: 19,
                                            end: 22,
                                            [content]: "let",
                                        },
                                    ),
                                    target: Identifier(
                                        Identifier {
                                            span: Span {
                                                file: "parse_postfix_unary_expression",
                                                module: "module/parse_postfix_unary_expression",
                                                start: 23,
                                                end: 24,
                                                [content]: "y",
                                            },
                                            value: "y",
                                        },
                                    ),
                                    expression: Unary(
                                        UnaryExpression {
                                            span: Span {
                                                file: "parse_postfix_unary_expression",
                                                module: "module/parse_postfix_unary_expression",
                                                start: 28,
                                                end: 28,
                                                [content]: "",
                                            },
                                            op: PostIncrement(
                                                Span {
                                                    file: "parse_postfix_unary_expression",
                                                    module: "module/parse_postfix_unary_expression",
                                                    start: 28,
                                                    end: 30,
                                                    [content]: "++",
                                                },
                                            ),
                                            expr: Identifier(
                                                IdentifierExpression {
                                                    span: Span {
                                                        file: "parse_postfix_unary_expression",
                                                        module: "module/parse_postfix_unary_expression",
                                                        start: 27,
                                                        end: 28,
                                                        [content]: "i",
                                                    },
                                                    ident: Identifier {
                                                        span: Span {
                                                            file: "parse_postfix_unary_expression",
                                                            module: "module/parse_postfix_unary_expression",
                                                            start: 27,
                                                            end: 28,
                                                            [content]: "i",
                                                        },
                                                        value: "i",
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                    type_annotation: None,
                                },
                            ),
                        ),
                    ],
                },
            },
        ],
    },
}
